@model FlexForge.Domain.Domain.Product
@using FlexForge.Domain.Enum
<div class="row">
    <div class="col-md-4">
        <form asp-controller="Products" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Product Name -->
            <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                <input asp-for="ProductName" class="form-control" />
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>

            <!-- Product Description -->
            <div class="form-group">
                <label asp-for="ProductDescription" class="control-label"></label>
                <input asp-for="ProductDescription" class="form-control" />
                <span asp-validation-for="ProductDescription" class="text-danger"></span>
            </div>

            <!-- Product Image -->
            <div class="form-group">
                <label asp-for="ProductImage" class="control-label"></label>
                <input asp-for="ProductImage" class="form-control" />
                <span asp-validation-for="ProductImage" class="text-danger"></span>
            </div>

            <!-- Price -->
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <!-- GenderType Dropdown -->
            <div class="form-group">
                <label asp-for="GenderType" class="control-label">Gender Type</label>
                <select asp-for="GenderType" class="form-control" asp-items="Html.GetEnumSelectList<GenderType>()">
                    <option value="">Select Gender Type</option>
                </select>
                <span asp-validation-for="GenderType" class="text-danger"></span>
            </div>

            <!-- AgeGroup Dropdown -->
            <div class="form-group">
                <label asp-for="AgeGroup" class="control-label">Age Group</label>
                <select asp-for="AgeGroup" class="form-control" asp-items="Html.GetEnumSelectList<AgeGroup>()">
                    <option value="">Select Age Group</option>
                </select>
                <span asp-validation-for="AgeGroup" class="text-danger"></span>
            </div>

            <!-- Category Dropdown -->
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label">Category</label>
                <select id="CategorySelect" name="CategoryId" class="form-control">
                    <option value="">Select Category</option>
                    @foreach (var category in ViewBag.Categories as IEnumerable<SelectListItem>)
                    {
                        <option value="@category.Value">@category.Text</option>
                    }
                </select>
            </div>

            <!-- SubCategory Dropdown -->
            <div class="form-group">
                <label asp-for="SubCategoryId" class="control-label">SubCategory</label>
                <select id="SubCategorySelect" name="SubCategoryId" class="form-control">
                    <option value="">Select SubCategory</option>
                    <!-- Options will be populated by JavaScript -->
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#CategorySelect').change(function () {
            var categoryId = $(this).val();
            $.ajax({
                url: '@Url.Action("SupportedSubCategories", "Products")',
                type: 'GET',
                data: { categoryId: categoryId },
                success: function (data) {
                    var $subCategorySelect = $('#SubCategorySelect');
                    $subCategorySelect.empty(); // Clear existing options
                    $subCategorySelect.append('<option value="">Select SubCategory</option>');

                    $.each(data, function (index, item) {
                        $subCategorySelect.append(
                            $('<option></option>').val(item.id).text(item.subCategoryName)
                        );
                    });
                }
            });
        });
    });
</script>
}

